Mon Oct 16 22:50:11 PDT 2023
Linux csslab15 4.18.0-477.21.1.el8_8.x86_64 #1 SMP Tue Aug 8 21:30:09 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux
uid=1150088(lylas3) gid=2121150088(lylas3) groups=2121150088(lylas3),605559(lab-access)
=====================================================
1. Compiles without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. Runs and produces correct output
=====================================================
Starting test01
* Testing ==, !=, [] and copy constructor
Ending tes01
PASS!
Starting test02
* Testing traversal
Ending test02
PASS!
Starting test03
* Testing rebalance
Ending test03
PASS!
Testing Bonus Extra Credit for Erase!
Starting test04
* Testing erase
Ending test04
PASS!
Starting test05
Testing for count
Ending test05
PASS!
Starting AC test01
* Testing basic autocomplete
Ending tesAC01
PASS!
Starting AC test02
* Testing cities autocomplete
Ending tesAC02
PASS!
=====================================================
3. clang-tidy warnings are fixed
=====================================================
17454 warnings generated.
34479 warnings generated.
51266 warnings generated.
68214 warnings generated.
82445 warnings generated.
96948 warnings generated.
Suppressed 96948 warnings (96948 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
=====================================================
4. clang-format does not find any formatting issues
=====================================================
Running clang-format on ./autocomplete.cpp
24c24
<   
---
> 
Running clang-format on ./bstmap.cpp
Running clang-format on ./bstmapprinter.cpp
Running clang-format on ./main.cpp
Running clang-format on ./testac.cpp
21c21
<   cout << "PASS!"<< endl;
---
>   cout << "PASS!" << endl;
Running clang-format on ./testbst.cpp
110c110
< //testing erase
---
> // testing erase
131c131
< //testing count
---
> // testing count
=====================================================
5. No memory leaks using g++
=====================================================
=====================================================
6. No memory leaks using valgrind, look for "definitely lost" 
=====================================================
==1835604== Memcheck, a memory error detector
==1835604== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==1835604== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==1835604== Command: ./a.out
==1835604== Parent PID: 1835460
==1835604== 
==1835604== 
==1835604== HEAP SUMMARY:
==1835604==     in use at exit: 0 bytes in 0 blocks
==1835604==   total heap usage: 487,159 allocs, 487,159 frees, 30,268,236 bytes allocated
==1835604== 
==1835604== All heap blocks were freed -- no leaks are possible
==1835604== 
==1835604== For lists of detected and suppressed errors, rerun with: -s
==1835604== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
Mon Oct 16 22:50:37 PDT 2023
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
